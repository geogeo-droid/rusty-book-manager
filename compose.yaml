services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
      network: host
    ports:
      - 18080:${PORT}
    environment:
      HOST: ${HOST}
      PORT: ${PORT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      AUTH_TOKEN_TTL: ${AUTH_TOKEN_TTL}
      JAEGER_HOST: ${JAEGER_HOST}
      JAEGER_PORT: ${JAEGER_PORT}
    depends_on:
      - redis
      - postgres

  redis:
    ports:
      - "6379-6384:6379-6384"
    environment:
      - "INITIAL_PORT=6379"
      - "REDIS_CLUSTER_IP=0.0.0.0"
      - "IP=0.0.0.0"
      - "BIND_ADDRESS=0.0.0.0"
    image: grokzen/redis-cluster:7.0.7
    healthcheck:
      test: ["CMD", "redis-cli", "config", "set", "protected-mode", "no"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    # appをdocker build する場合。
    # image: redis:latest
    # ports:
    #   - "16379:6379"
    # healthcheck:
    #   test: ["CMD", "redis-cli", "ping"] # RedisへのPINGコマンドを実行
    #   interval: 5s # 5秒ごとに実行
    #   timeout: 2s  # 2秒でコマンドのタイムアウト
    #   retries: 3   # 3回連続で失敗したら不健康と判断
    #   start_period: 10s # 起動後最初のヘルスチェック開始までの猶予期間


  postgres:
    image: postgres:15
    command: postgres -c log_destination=stderr -c log_statement=all -c log_connections=on -c log_disconnections=on
    ports:
      - ${DATABASE_PORT_OUTER}:${DATABASE_PORT_INNER}
    volumes:
      - db:/var/lib/postgres/data
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE_USERNAME}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

volumes:
  db:
    driver: local
